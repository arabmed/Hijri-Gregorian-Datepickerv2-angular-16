{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport var CustomNgbDateParserFormatter = /** @class */function (_super) {\n  __extends(CustomNgbDateParserFormatter, _super);\n  function CustomNgbDateParserFormatter() {\n    var _this = _super.call(this) || this;\n    _this.datePipe = new DatePipe('en-US');\n    return _this;\n  }\n  CustomNgbDateParserFormatter.prototype.format = function (date) {\n    if (date === null) {\n      return '';\n    }\n    try {\n      return this.datePipe.transform(new Date(date.year, date.month - 1, date.day), 'd/M/yyyy');\n    } catch (e) {\n      return '';\n    }\n  };\n  CustomNgbDateParserFormatter.prototype.parse = function (value) {\n    var returnVal;\n    if (!value) {\n      returnVal = null;\n    } else {\n      try {\n        var dateParts = this.datePipe.transform(value, 'M-d-y').split('-');\n        returnVal = {\n          year: parseInt(dateParts[2]),\n          month: parseInt(dateParts[0]),\n          day: parseInt(dateParts[1])\n        };\n      } catch (e) {\n        returnVal = null;\n      }\n    }\n    return returnVal;\n  };\n  CustomNgbDateParserFormatter.ɵfac = function CustomNgbDateParserFormatter_Factory(t) {\n    return new (t || CustomNgbDateParserFormatter)();\n  };\n  CustomNgbDateParserFormatter.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomNgbDateParserFormatter,\n    factory: CustomNgbDateParserFormatter.ɵfac\n  });\n  return CustomNgbDateParserFormatter;\n}(NgbDateParserFormatter);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}