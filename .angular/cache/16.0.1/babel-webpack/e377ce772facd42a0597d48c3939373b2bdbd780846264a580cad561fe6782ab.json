{"ast":null,"code":"import _defineProperty from \"H:/HijriGregorianDatepicker-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { NgbDateParserFormatter, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport * as momentjs from 'moment';\nimport * as moment_ from 'moment-hijri';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nconst moment = momentjs;\nconst momentHijri = moment_;\nlet DateFormatterService = /*#__PURE__*/(() => {\n  class DateFormatterService {\n    constructor(parserFormatter) {\n      _defineProperty(this, \"parserFormatter\", void 0);\n      this.parserFormatter = parserFormatter;\n    }\n    ToString(date) {\n      const dateStr = this.parserFormatter.format(date);\n      return dateStr;\n    }\n    ToHijriDateStruct(hijriDate, format) {\n      const hijriMomentDate = momentHijri(hijriDate, format); // Parse a Hijri date based on format.\n      const day = hijriMomentDate.iDate();\n      const month = +hijriMomentDate.iMonth() + 1;\n      const year = hijriMomentDate.iYear();\n      const ngDate = new NgbDate(+year, month, +day);\n      return ngDate;\n    }\n    ToGregorianDateStruct(gregorianDate, format) {\n      const momentDate = moment(gregorianDate, format); // Parse a Gregorian date based on format.\n      const day = momentDate.date();\n      const month = +momentDate.month() + 1;\n      const year = momentDate.year();\n      const ngDate = new NgbDate(+year, +month, +day);\n      return ngDate;\n    }\n    ToHijri(date) {\n      if (!date) {\n        return null;\n      }\n      const dateStr = this.ToString(date);\n      const momentDate = momentHijri(dateStr, 'D/M/YYYY');\n      const day = momentDate.iDate();\n      const month = +momentDate.iMonth() + 1;\n      const year = momentDate.iYear();\n      const ngDate = new NgbDate(+year, month, +day);\n      return ngDate;\n    }\n    ToGregorian(date) {\n      if (!date) {\n        return null;\n      }\n      const dateStr = this.ToString(date);\n      const momentDate = momentHijri(dateStr, 'iD/iM/iYYYY');\n      const day = momentDate.locale('en').format('D');\n      const month = momentDate.locale('en').format('M');\n      const year = momentDate.locale('en').format('Y');\n      const ngDate = new NgbDate(+year, +month, +day);\n      return ngDate;\n    }\n    GetTodayHijri() {\n      const todayHijri = momentHijri().locale('en').format('iYYYY/iM/iD');\n      return this.ToHijriDateStruct(todayHijri, 'iYYYY/iM/iD');\n    }\n    GetTodayGregorian() {\n      const todayGregorian = moment().locale('en').format('YYYY/M/D');\n      return this.ToGregorianDateStruct(todayGregorian, 'YYYY/M/D');\n    }\n  }\n  _defineProperty(DateFormatterService, \"\\u0275fac\", function DateFormatterService_Factory(t) {\n    return new (t || DateFormatterService)(i0.ɵɵinject(i1.NgbDateParserFormatter));\n  });\n  _defineProperty(DateFormatterService, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DateFormatterService,\n    factory: DateFormatterService.ɵfac\n  }));\n  return DateFormatterService;\n})();\nexport { DateFormatterService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}